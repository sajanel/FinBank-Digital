# HELP http_request_duration_seconds duration histogram of http responses labeled with: status_code, method, path
# TYPE http_request_duration_seconds histogram
http_request_duration_seconds_bucket{le="0.003",status_code="404",method="GET",path="/api/transfer"} 0
http_request_duration_seconds_bucket{le="0.03",status_code="404",method="GET",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="0.1",status_code="404",method="GET",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="0.3",status_code="404",method="GET",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="1.5",status_code="404",method="GET",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="10",status_code="404",method="GET",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="+Inf",status_code="404",method="GET",path="/api/transfer"} 1
http_request_duration_seconds_sum{status_code="404",method="GET",path="/api/transfer"} 0.01246183
http_request_duration_seconds_count{status_code="404",method="GET",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="0.003",status_code="400",method="POST",path="/api/transfer"} 0
http_request_duration_seconds_bucket{le="0.03",status_code="400",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="0.1",status_code="400",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="0.3",status_code="400",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="1.5",status_code="400",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="10",status_code="400",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="+Inf",status_code="400",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_sum{status_code="400",method="POST",path="/api/transfer"} 0.015536105
http_request_duration_seconds_count{status_code="400",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="0.003",status_code="201",method="POST",path="/api/transfer"} 0
http_request_duration_seconds_bucket{le="0.03",status_code="201",method="POST",path="/api/transfer"} 1
http_request_duration_seconds_bucket{le="0.1",status_code="201",method="POST",path="/api/transfer"} 2
http_request_duration_seconds_bucket{le="0.3",status_code="201",method="POST",path="/api/transfer"} 2
http_request_duration_seconds_bucket{le="1.5",status_code="201",method="POST",path="/api/transfer"} 2
http_request_duration_seconds_bucket{le="10",status_code="201",method="POST",path="/api/transfer"} 2
http_request_duration_seconds_bucket{le="+Inf",status_code="201",method="POST",path="/api/transfer"} 2
http_request_duration_seconds_sum{status_code="201",method="POST",path="/api/transfer"} 0.070065432
http_request_duration_seconds_count{status_code="201",method="POST",path="/api/transfer"} 2

# HELP up 1 = up, 0 = not up
# TYPE up gauge
up 1

# HELP process_cpu_user_seconds_total Total user CPU time spent in seconds.
# TYPE process_cpu_user_seconds_total counter
process_cpu_user_seconds_total 4.483816

# HELP process_cpu_system_seconds_total Total system CPU time spent in seconds.
# TYPE process_cpu_system_seconds_total counter
process_cpu_system_seconds_total 1.36145

# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 5.8452660000000005

# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1741474117

# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 82018304

# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 896212992

# HELP process_heap_bytes Process heap size in bytes.
# TYPE process_heap_bytes gauge
process_heap_bytes 135081984

# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 27

# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1048576

# HELP nodejs_eventloop_lag_seconds Lag of event loop in seconds.
# TYPE nodejs_eventloop_lag_seconds gauge
nodejs_eventloop_lag_seconds 0.001253876

# HELP nodejs_eventloop_lag_min_seconds The minimum recorded event loop delay.
# TYPE nodejs_eventloop_lag_min_seconds gauge
nodejs_eventloop_lag_min_seconds 0.00851968

# HELP nodejs_eventloop_lag_max_seconds The maximum recorded event loop delay.
# TYPE nodejs_eventloop_lag_max_seconds gauge
nodejs_eventloop_lag_max_seconds 0.056492031

# HELP nodejs_eventloop_lag_mean_seconds The mean of the recorded event loop delays.
# TYPE nodejs_eventloop_lag_mean_seconds gauge
nodejs_eventloop_lag_mean_seconds 0.01016128219443068

# HELP nodejs_eventloop_lag_stddev_seconds The standard deviation of the recorded event loop delays.
# TYPE nodejs_eventloop_lag_stddev_seconds gauge
nodejs_eventloop_lag_stddev_seconds 0.00024502543737130124

# HELP nodejs_eventloop_lag_p50_seconds The 50th percentile of the recorded event loop delays.
# TYPE nodejs_eventloop_lag_p50_seconds gauge
nodejs_eventloop_lag_p50_seconds 0.010149887

# HELP nodejs_eventloop_lag_p90_seconds The 90th percentile of the recorded event loop delays.
# TYPE nodejs_eventloop_lag_p90_seconds gauge
nodejs_eventloop_lag_p90_seconds 0.010272767

# HELP nodejs_eventloop_lag_p99_seconds The 99th percentile of the recorded event loop delays.
# TYPE nodejs_eventloop_lag_p99_seconds gauge
nodejs_eventloop_lag_p99_seconds 0.010420223

# HELP nodejs_active_resources Number of active resources that are currently keeping the event loop alive, grouped by async resource type.
# TYPE nodejs_active_resources gauge
nodejs_active_resources{type="TTYWrap"} 3
nodejs_active_resources{type="TCPSocketWrap"} 5
nodejs_active_resources{type="TCPServerWrap"} 1
nodejs_active_resources{type="Timeout"} 1
nodejs_active_resources{type="Immediate"} 1

# HELP nodejs_active_resources_total Total number of active resources.
# TYPE nodejs_active_resources_total gauge
nodejs_active_resources_total 11

# HELP nodejs_active_handles Number of active libuv handles grouped by handle type. Every handle type is C++ class name.
# TYPE nodejs_active_handles gauge
nodejs_active_handles{type="WriteStream"} 2
nodejs_active_handles{type="ReadStream"} 1
nodejs_active_handles{type="Socket"} 5
nodejs_active_handles{type="Server"} 1

# HELP nodejs_active_handles_total Total number of active handles.
# TYPE nodejs_active_handles_total gauge
nodejs_active_handles_total 9

# HELP nodejs_active_requests Number of active libuv requests grouped by request type. Every request type is C++ class name.
# TYPE nodejs_active_requests gauge

# HELP nodejs_active_requests_total Total number of active requests.
# TYPE nodejs_active_requests_total gauge
nodejs_active_requests_total 0

# HELP nodejs_heap_size_total_bytes Process heap size from Node.js in bytes.
# TYPE nodejs_heap_size_total_bytes gauge
nodejs_heap_size_total_bytes 23363584

# HELP nodejs_heap_size_used_bytes Process heap size used from Node.js in bytes.
# TYPE nodejs_heap_size_used_bytes gauge
nodejs_heap_size_used_bytes 21334048

# HELP nodejs_external_memory_bytes Node.js external memory size in bytes.
# TYPE nodejs_external_memory_bytes gauge
nodejs_external_memory_bytes 19642962

# HELP nodejs_heap_space_size_total_bytes Process heap space size total from Node.js in bytes.
# TYPE nodejs_heap_space_size_total_bytes gauge
nodejs_heap_space_size_total_bytes{space="read_only"} 0
nodejs_heap_space_size_total_bytes{space="old"} 16928768
nodejs_heap_space_size_total_bytes{space="code"} 1519616
nodejs_heap_space_size_total_bytes{space="map"} 1056768
nodejs_heap_space_size_total_bytes{space="large_object"} 2809856
nodejs_heap_space_size_total_bytes{space="code_large_object"} 0
nodejs_heap_space_size_total_bytes{space="new_large_object"} 0
nodejs_heap_space_size_total_bytes{space="new"} 1048576

# HELP nodejs_heap_space_size_used_bytes Process heap space size used from Node.js in bytes.
# TYPE nodejs_heap_space_size_used_bytes gauge
nodejs_heap_space_size_used_bytes{space="read_only"} 0
nodejs_heap_space_size_used_bytes{space="old"} 16089096
nodejs_heap_space_size_used_bytes{space="code"} 1390208
nodejs_heap_space_size_used_bytes{space="map"} 835616
nodejs_heap_space_size_used_bytes{space="large_object"} 2728352
nodejs_heap_space_size_used_bytes{space="code_large_object"} 0
nodejs_heap_space_size_used_bytes{space="new_large_object"} 0
nodejs_heap_space_size_used_bytes{space="new"} 295824

# HELP nodejs_heap_space_size_available_bytes Process heap space size available from Node.js in bytes.
# TYPE nodejs_heap_space_size_available_bytes gauge
nodejs_heap_space_size_available_bytes{space="read_only"} 0
nodejs_heap_space_size_available_bytes{space="old"} 522488
nodejs_heap_space_size_available_bytes{space="code"} 31104
nodejs_heap_space_size_available_bytes{space="map"} 199152
nodejs_heap_space_size_available_bytes{space="large_object"} 0
nodejs_heap_space_size_available_bytes{space="code_large_object"} 0
nodejs_heap_space_size_available_bytes{space="new_large_object"} 1030976
nodejs_heap_space_size_available_bytes{space="new"} 735152

# HELP nodejs_version_info Node.js version info.
# TYPE nodejs_version_info gauge
nodejs_version_info{version="v18.20.7",major="18",minor="20",patch="7"} 1

# HELP nodejs_gc_duration_seconds Garbage collection duration by kind, one of major, minor, incremental or weakcb.
# TYPE nodejs_gc_duration_seconds histogram
nodejs_gc_duration_seconds_bucket{le="0.001",kind="incremental"} 4
nodejs_gc_duration_seconds_bucket{le="0.01",kind="incremental"} 4
nodejs_gc_duration_seconds_bucket{le="0.1",kind="incremental"} 4
nodejs_gc_duration_seconds_bucket{le="1",kind="incremental"} 4
nodejs_gc_duration_seconds_bucket{le="2",kind="incremental"} 4
nodejs_gc_duration_seconds_bucket{le="5",kind="incremental"} 4
nodejs_gc_duration_seconds_bucket{le="+Inf",kind="incremental"} 4
nodejs_gc_duration_seconds_sum{kind="incremental"} 0.0011219530031085015
nodejs_gc_duration_seconds_count{kind="incremental"} 4
nodejs_gc_duration_seconds_bucket{le="0.001",kind="major"} 0
nodejs_gc_duration_seconds_bucket{le="0.01",kind="major"} 2
nodejs_gc_duration_seconds_bucket{le="0.1",kind="major"} 2
nodejs_gc_duration_seconds_bucket{le="1",kind="major"} 2
nodejs_gc_duration_seconds_bucket{le="2",kind="major"} 2
nodejs_gc_duration_seconds_bucket{le="5",kind="major"} 2
nodejs_gc_duration_seconds_bucket{le="+Inf",kind="major"} 2
nodejs_gc_duration_seconds_sum{kind="major"} 0.00652207300066948
nodejs_gc_duration_seconds_count{kind="major"} 2
nodejs_gc_duration_seconds_bucket{le="0.001",kind="minor"} 9
nodejs_gc_duration_seconds_bucket{le="0.01",kind="minor"} 13
nodejs_gc_duration_seconds_bucket{le="0.1",kind="minor"} 13
nodejs_gc_duration_seconds_bucket{le="1",kind="minor"} 13
nodejs_gc_duration_seconds_bucket{le="2",kind="minor"} 13
nodejs_gc_duration_seconds_bucket{le="5",kind="minor"} 13
nodejs_gc_duration_seconds_bucket{le="+Inf",kind="minor"} 13
nodejs_gc_duration_seconds_sum{kind="minor"} 0.010147202998399735
nodejs_gc_duration_seconds_count{kind="minor"} 13
